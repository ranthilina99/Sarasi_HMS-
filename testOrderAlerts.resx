<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxOrder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>